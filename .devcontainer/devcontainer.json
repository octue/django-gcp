// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.187.0/containers/python-3
{
  "name": "Django GCP",

  "dockerComposeFile": ["docker-compose.yml", "docker-compose.developer.yml"],
  "service": "web",
  "workspaceFolder": "/workspace",

  // Set *default* container specific settings.json values on container create.
  "customizations": {
    "vscode": {
      "settings": {
        "[python]": {
          "editor.defaultFormatter": "ms-python.black-formatter",
          "editor.formatOnSave": true,
          "editor.codeActionsOnSave": {
            "source.organizeImports": "always",
            "source.fixAll": "always"
          }
        },
        "black-formatter.args": ["--line-length", "120"],
        "black-formatter.importStrategy": "fromEnvironment",
        "isort.args": ["--profile", "black"],
        "isort.importStrategy": "fromEnvironment",
        "austin.mode": "Wall time",
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true,
        "jupyter.widgetScriptSources": ["jsdelivr.com", "unpkg.com"],
        // Line length to match black settings
        // Disable specific messages:
        //  - To find the details do: /usr/local/py-utils/bin/pylint --list-msgs
        //  - Disable missing-module-docstring (C0114) because we don't document modules routinely, just their members
        //  - Disable invalid-name (C0103) because pylint thinks that eg 'x', 'df', 'np' are invalid due to their lengths
        "pylint.args": [
          "--max-line-length=120",
          "--disable=missing-module-docstring,invalid-name",
          "--load-plugins=pylint_django"
        ],
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "terminal.integrated.defaultProfile.linux": "zsh",
        // Handle this: https://github.com/microsoft/vscode-python/issues/693
        "python.testing.pytestArgs": ["--no-cov"]
      },
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "erikphansen.vscode-toggle-column-selection",
        "esbenp.prettier-vscode",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "github.vscode-github-actions",
        "irongeek.vscode-env",
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.pylint",
        "ms-python.black-formatter",
        "ms-python.flake8",
        "ms-python.isort",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-renderers",
        "ms-toolsai.jupyter-keymap",
        "ms-vsliveshare.vsliveshare",
        "p403n1x87.austin-vscode",
        "ritwickdey.liveserver",
        "shamanu4.django-intellisense",
        "thebarkman.vscode-djaneiro",
        "trond-snekvik.simple-rst",
        "4ops.terraform"
      ]
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [80, 443, 5000, 7045, 7046, 7047, 7048, 7049, 8000, 8080],

  // Use 'postAttachCommand' to run commands after the container is created and attached (ie git is available).
  // This is preferential to postCreateCommand as invoking git (eg for private poetry installs or addition of
  // git config preferences) doesn't override injected git configs
  // https://stackoverflow.com/a/73097009/3556110
  "postAttachCommand": ". .devcontainer/postattach.sh",

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",

  // Use devcontainer features
  "features": {
    "ghcr.io/devcontainers/features/terraform:1": {},
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "configureZshAsDefaultShell": true,
      "installOhMyZsh": true,
      "upgradePackages": true,
      "username": "vscode",
      "userUid": "automatic",
      "userGid": "automatic"
    },
    "ghcr.io/devcontainers/features/sshd:1": {},
    "ghcr.io/devcontainers/features/git:1": {
      "ppa": true,
      "version": "os-provided"
    },
    "ghcr.io/devcontainers/features/git-lfs:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "installDirectlyFromGitHubRelease": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/node:1": {
      "nodeGypDependencies": false,
      "version": "latest"
    }
  }
}
